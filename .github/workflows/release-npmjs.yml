name: Publish raitracker to npmjs
on:
  workflow_dispatch:
    inputs:
      release:
        types: [published]
      bumpType:
        type: choice
        description: 'version options'
        options:
          - major
          - minor
          - patch
          - prerelease
          - none
        required: true
        default: 'minor'
jobs:
  release-npmjs:
    name: release to npmjs
    runs-on: ubuntu-latest

    steps:
      # -------------------
      # Checkout code
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      # -------------------
      # Setup python on the runner
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9

      # -------------------
      # Install basic packages (not associated with the repo)
      - name: update and upgrade pip, semver
        run: |
          pip install --upgrade pip
          pip install semver

      # -------------------
      # Update the package version by bumping the version to the next
      - name: Bump version
        run: |
          python bump_version.py ${{github.event.inputs.bumpType}}

      # -------------------
      # Install the package and all its dependencies
      # Needs to do this after bumping the version, otherwise
      # package.__version__ will point to the previous version
      - name: Install current package
        run: |
          pip install --upgrade pip
          pip install .[dev]
          pip list

      # -------------------
      # install build
      - name: Install pypa/build
        run: >-
          python -m pip install build --user

      # -------------------
      # Run tests before uploading to npmjs
      - name: run tests
        run: |
          cd raitracker/training/src/
          sh generate_models.sh
          cd ../../..
          pytest --cov=raitracker raitracker/test/.

      # -------------------
      # Setup .npmrc file on the runner to publish to npm
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
          cache: npm

      # -------------------
      # Install client packages
      - name: Install client packages
        run: npm install

      # -------------------
      # Compile typescript code
      - name: Compile raitracker
        run: npm run build

      # # -------------------
      # # Build wheel
      # - name: build wheel
      #   run: python -m build

      # Build NPM package
      - name: Build NPM package
        run: |
          python -m pip install jupyterlab==3.6.1
          npm i rimraf
          npm run build:prod
          python -m build
          # build the Python distribution package
          # python setup.py sdist bdist_wheel --universal
          # copy the built package to the NPM package directory
          cp dist/*.tar.gz raitracker/labextension
          npm pack --pack-destination dist
          cp dist/*.tgz raitracker/labextension 
          cp -r raitracker/labextension  dist
        env:
          # ensure that the Python package dependencies are included
          PYTHONPATH: ./raitracker

      - name: Upload Distributions
        uses: actions/upload-artifact@v2
        with:
          name: dist-${{ github.run_number }}
          path: .jupyter_releaser_checkout/dist

      # -------------------
      # Cleanup artifacts
      - name: cleanup artifacts
        run: |
          cd dist/
          shopt -s extglob
          rm -rv !(raitracker*)
          cd ..

      # -------------------
      # Publish package to npmjs
      - name: Publish package to npmjs
        run: npm publish
        env:
          NODE_AUTH_TOKEN:
            ${{ secrets.NPMJS_API_TOKEN }}

      # -------------------
      # Commit the changes performed by the bump
      # Also, tag the current commit with the version number
      - name: commit new setup file
        if: ${{ github.event.inputs.bumpType != 'none' }}
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add package.json raitracker/_version.py
          git commit -m "update version number"
          VERSION=$(python bump_version.py 'none')
          git tag -a $VERSION -m "Release $VERSION"

      # -------------------
      # Push the changes performed by bump2version to the current branch
      - name: Push changes
        if: ${{ github.event.inputs.bumpType != 'none' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
