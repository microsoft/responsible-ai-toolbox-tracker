name: Publish raitracker to npmjs

on:
  workflow_dispatch:
    inputs:
      release:
        types: [published]
      bumpType:
        type: choice
        description: "version options"
        options:
          - major
          - minor
          - patch
          - prerelease
          - none
        required: true
        default: 'none'
jobs:
  release-npmjs:
    name: release to npmjs
    runs-on: ubuntu-latest

    steps:       
      # -------------------
      # Checkout code
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
      
      # -------------------
      # Setup python on the runner
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9

      # -------------------
      # Install basic packages (not associated with the repo)      
      - name: update and upgrade pip, semver
        run: |
          pip install --upgrade pip
          pip install semver

      # -------------------
      # Update the package version by bumping the version to the next
      - name: Bump version
        run: |
          python bump_version.py ${{github.event.inputs.bumpType}}

      # -------------------
      # Install the package and all its dependencies
      # Needs to do this after bumping the version, otherwise
      # package.__version__ will point to the previous version
      - name: Install current package
        run: |
          pip install --upgrade pip
          pip install .[dev]
          pip list

      # -------------------
      # install build
      - name: Install pypa/build
        run: >-
          python -m pip install build --user

      # -------------------
      # Run tests before uploading to PyPi
      - name: run tests
        run: |
          cd raitracker/training/src/
          sh generate_models.sh
          cd ../../..
          pytest --cov=raitracker raitracker/test/.
      
      # -------------------    
      # Setup .npmrc file on the runner to publish to npm
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
          cache: npm

      # -------------------
      # Install client packages
      - name: Install client packages
        run: npm install

      # -------------------
      # Compile typescript code
      - name: Compile raitracker
        run: npm run build

      # -------------------
      # Build wheel
      - name: build wheel
        run: python -m build

      # -------------------
      # Cleanup artifacts
      - name: cleanup artifacts
        run: |
          cd dist/
          shopt -s extglob
          rm -rv !(raitracker*)
          cd ..

      # -------------------
      # Publish package to npmjs      
      - name: Publish package to npmjs   
        run: npm publish
        with:
          user: __token__
          password: ${{ secrets.NPMJS_API_TOKEN }}