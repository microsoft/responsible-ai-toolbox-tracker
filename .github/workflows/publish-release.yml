name: 'Publish Release using jupyter-releaser'
on:
  workflow_dispatch:
    inputs:
      version_spec:
        type: choice
        description: 'version options'
        options:
          - major
          - minor
          - patch
          - prerelease
          - none
        required: true
        default: 'patch'
      branch:
        description: 'The target branch'
        required: false
      release_url:
        description: 'The URL of the draft GitHub release'
        required: false
      steps_to_skip:
        description: 'Comma separated list of steps to skip'
        required: false

jobs:
  release-npmjs:
    runs-on: ubuntu-latest
    steps:
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Prep Release
        id: prep-release
        uses: jupyter-server/jupyter_releaser/.github/actions/prep-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version_spec: ${{ github.event.inputs.version_spec }}
          post_version_spec: ${{ github.event.inputs.post_version_spec }}
          target: ${{ github.event.inputs.target }}
          branch: ${{ github.event.inputs.branch }}
          since: ${{ github.event.inputs.since }}
          since_last_stable: ${{ github.event.inputs.since_last_stable }}

      - name: Populate Release
        id: populate-release
        uses: jupyter-server/jupyter_releaser/.github/actions/populate-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ github.event.inputs.target }}
          branch: ${{ github.event.inputs.branch }}
          release_url: ${{ steps.prep-release.outputs.release_url }}
          steps_to_skip: ${{ github.event.inputs.steps_to_skip }}

      # -------------------
      # Checkout code
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      # -------------------
      # Setup python on the runner
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9

      # -------------------
      # Install basic packages (not associated with the repo)
      - name: update and upgrade pip, semver
        run: |
          pip install --upgrade pip
          pip install semver

      # -------------------
      # Install the package and all its dependencies
      # Needs to do this after bumping the version, otherwise
      # package.__version__ will point to the previous version
      - name: Install current package
        run: |
          pip install --upgrade pip
          pip install .[dev]
          pip list
          
      # -------------------
      # Update the package version by bumping the version to the next
      - name: Bump version
        run: |
          python bump_version.py ${{github.event.inputs.bumpType}}

      - name: Finalize Release
        id: finalize-release
        env:
          NPM_TOKEN: ${{ secrets.NPMJS_API_TOKEN }}
        uses: jupyter-server/jupyter-releaser/.github/actions/finalize-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ github.event.inputs.target }}
          release_url: ${{ steps.populate-release.outputs.release_url }}
          steps_to_skip: ${{ github.event.inputs.steps_to_skip }}
          # twine-cmd: 'twine upload --skip-existing --verbose dist/*'
          # npm_cmd: 'npm publish --dry-run'
          # npm_cmd: 'npm publish --tag next'

      - name: '** Next Step **'
        if: ${{ success() }}
        run: |
          echo "Verify the final release" >> $GITHUB_OUTPUT
          echo ${{ steps.finalize-release.outputs.release_url }} >> $GITHUB_OUTPUT
      - name: '** Failure Message **'
        if: ${{ failure() }}
        run: |
          echo "Failed to Publish the Draft Release Url:" >> $GITHUB_OUTPUT
          echo ${{ steps.populate-release.outputs.release_url }} >> $GITHUB_OUTPUT
