name: 'Step 2: Publish Release'
on:
  workflow_dispatch:
    inputs:
      target:
        description: 'The owner/repo GitHub target'
        required: true
      bumpType:
        type: choice
        description: 'Version options'
        options:
          - major
          - minor
          - patch
          - prerelease
          - none
        required: true
        default: 'patch'
      branch:
        description: 'The target branch'
        required: false
      release_url:
        description: 'The URL of the draft GitHub release'
        required: false
      steps_to_skip:
        description: 'Comma separated list of steps to skip'
        required: false

jobs:
  release-npmjs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      # -------------------
      # Update the package version by bumping the version to the next
      - name: Bump version
        run: |
          python bump_version.py ${{github.event.inputs.bumpType}}
            
      # -------------------
      # Install tracker
      - name: Dependencies Dependencies
        shell: bash
        run: |
          pip install -e .

      - name: Populate Release
        id: populate-release
        uses: jupyter-server/jupyter_releaser/.github/actions/populate-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN   }}
          target: ${{ github.event.inputs.target }}
          branch: ${{ github.event.inputs.branch }}
          release_url: ${{ github.event.inputs.release_url }}
          steps_to_skip: ${{ github.event.inputs.steps_to_skip }}

      - name: Finalize Release
        id: finalize-release
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
          PYPI_TOKEN_MAP: ${{ secrets.PYPI_TOKEN_MAP }}
          TWINE_USERNAME: __token__
          NPM_TOKEN: ${{ secrets.NPMJS_API_TOKEN }}
        uses: jupyter-server/jupyter_releaser/.github/actions/finalize-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ github.event.inputs.target }}
          release_url: ${{ steps.populate-release.outputs.release_url }}

      - name: Publish to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
          npm publish --tag next --access public
        env:
          NPM_TOKEN: ${{ secrets.NPMJS_API_TOKEN }}

      - name: '** Next Step **'
        if: ${{ success() }}
        run: |
          echo "Verify the final release"
          echo ${{ steps.finalize-release.outputs.release_url }}

      - name: '** Failure Message **'
        if: ${{ failure() }}
        run: |
          echo "Failed to Publish the Draft Release Url:"
          echo ${{ steps.populate-release.outputs.release_url }}
